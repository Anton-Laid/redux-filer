{"ast":null,"code":"var _jsxFileName = \"/Applications/projects/002 dashboard-app-starter 2/src/components/FilterPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\nimport { selectFiler } from \"store/filters/filter-selector\";\nimport { removeFilter, clearFilter } from \"store/filters/filter-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterPanel = () => {\n  _s();\n\n  const currentFilters = useSelector(selectFiler);\n  const dispatch = useDispatch();\n\n  if (currentFilters.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"filter-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-panel-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: currentFilters.map(i => /*#__PURE__*/_jsxDEV(Badge, {\n          variant: \"clearable\",\n          onClear: () => dispatch(removeFilter()),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(clearFilter),\n        className: \"link\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterPanel, \"ajCB1MTK/AECUmRlgytng8zKhgE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FilterPanel;\nexport { FilterPanel };\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"sources":["/Applications/projects/002 dashboard-app-starter 2/src/components/FilterPanel.jsx"],"names":["useSelector","useDispatch","Badge","Card","Stack","selectFiler","removeFilter","clearFilter","FilterPanel","currentFilters","dispatch","length","map","i"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,6BAA1C;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,cAAc,GAAGT,WAAW,CAACK,WAAD,CAAlC;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,MAAIQ,cAAc,CAACE,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,KAAD;AAAA,kBACGF,cAAc,CAACG,GAAf,CAAoBC,CAAD,iBAClB,QAAC,KAAD;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,OAAO,EAAE,MAAMH,QAAQ,CAACJ,YAAY,EAAb,CAHzB;AAAA,oBAKGO;AALH,WACOA,CADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAQ,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAACH,WAAD,CAA/B;AAA8C,QAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7BD;;GAAMC,W;UACmBR,W,EACNC,W;;;KAFbO,W;AA+BN,SAASA,WAAT","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\nimport { selectFiler } from \"store/filters/filter-selector\";\nimport { removeFilter, clearFilter } from \"store/filters/filter-action\";\n\nconst FilterPanel = () => {\n  const currentFilters = useSelector(selectFiler);\n  const dispatch = useDispatch();\n\n  if (currentFilters.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card className=\"filter-panel\">\n      <div className=\"filter-panel-wrapper\">\n        <Stack>\n          {currentFilters.map((i) => (\n            <Badge\n              key={i}\n              variant=\"clearable\"\n              onClear={() => dispatch(removeFilter())}\n            >\n              {i}\n            </Badge>\n          ))}\n        </Stack>\n\n        <button onClick={() => dispatch(clearFilter)} className=\"link\">\n          Clear\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nexport { FilterPanel };\n"]},"metadata":{},"sourceType":"module"}