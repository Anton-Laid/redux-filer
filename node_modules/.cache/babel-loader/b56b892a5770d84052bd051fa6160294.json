{"ast":null,"code":"var _jsxFileName = \"/Applications/projects/redux-filer/src/components/FilterPanel.jsx\";\nimport { connect } from \"react-redux\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\nimport { selectFiler } from \"store/filters/filter-selector\";\nimport { removeFilter, clearFilter } from \"store/filters/filter-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _FilterPanel = _ref => {\n  let {\n    currentFilters,\n    removeFilter,\n    clearFilter\n  } = _ref;\n\n  // const currentFilters = useSelector(selectFiler);\n  // const dispatch = useDispatch();\n  if (currentFilters.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"filter-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-panel-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: currentFilters.map(i => /*#__PURE__*/_jsxDEV(Badge, {\n          variant: \"clearable\",\n          onClear: () => removeFilter(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilter,\n        className: \"link\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nconst mapStateToProps = state => ({\n  currentFilters: state.filters\n});\n\nconst FilterPanel = connect(mapStateToProps, {\n  removeFilter,\n  clearFilter\n})(_FilterPanel);\nexport { FilterPanel };","map":{"version":3,"sources":["/Applications/projects/redux-filer/src/components/FilterPanel.jsx"],"names":["connect","Badge","Card","Stack","selectFiler","removeFilter","clearFilter","_FilterPanel","currentFilters","length","map","i","mapStateToProps","state","filters","FilterPanel"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,6BAA1C;;;AAEA,MAAMC,YAAY,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,cAAF;AAAkBH,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,GAAkD;;AACtE;AACA;AAEA,MAAIE,cAAc,CAACC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,KAAD;AAAA,kBACGD,cAAc,CAACE,GAAf,CAAoBC,CAAD,iBAClB,QAAC,KAAD;AAAe,UAAA,OAAO,EAAC,WAAvB;AAAmC,UAAA,OAAO,EAAE,MAAMN,YAAY,CAACM,CAAD,CAA9D;AAAA,oBACGA;AADH,WAAYA,CAAZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,OAAO,EAAEL,WAAjB;AAA8B,QAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBD;;AA0BA,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,cAAc,EAAEK,KAAK,CAACC;AADY,CAAZ,CAAxB;;AAIA,MAAMC,WAAW,GAAGf,OAAO,CAACY,eAAD,EAAkB;AAAEP,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,CAAP,CAClBC,YADkB,CAApB;AAIA,SAASQ,WAAT","sourcesContent":["import { connect } from \"react-redux\";\nimport { Badge } from \"UI/Badge\";\nimport { Card } from \"UI/Card\";\nimport { Stack } from \"UI/Stack\";\nimport { selectFiler } from \"store/filters/filter-selector\";\nimport { removeFilter, clearFilter } from \"store/filters/filter-action\";\n\nconst _FilterPanel = ({ currentFilters, removeFilter, clearFilter }) => {\n  // const currentFilters = useSelector(selectFiler);\n  // const dispatch = useDispatch();\n\n  if (currentFilters.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card className=\"filter-panel\">\n      <div className=\"filter-panel-wrapper\">\n        <Stack>\n          {currentFilters.map((i) => (\n            <Badge key={i} variant=\"clearable\" onClear={() => removeFilter(i)}>\n              {i}\n            </Badge>\n          ))}\n        </Stack>\n\n        <button onClick={clearFilter} className=\"link\">\n          Clear\n        </button>\n      </div>\n    </Card>\n  );\n};\nconst mapStateToProps = (state) => ({\n  currentFilters: state.filters,\n});\n\nconst FilterPanel = connect(mapStateToProps, { removeFilter, clearFilter })(\n  _FilterPanel\n);\n\nexport { FilterPanel };\n"]},"metadata":{},"sourceType":"module"}